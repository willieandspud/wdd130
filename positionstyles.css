/* CSS - Name: "positionstyles.css" */
/* Activity 1 styles */
.content1 {
  /* This is the parent of the activity 1 boxes. */
  display: grid;
  grid-template-columns: 1fr 1fr; /* Two equal columns */
  justify-items: center; /* Center align items horizontally */
  gap: 20px; /* Add a gap of 20px between rows and columns */
}

.red1 {
  width: 100%; /* Full width */
  height: 100px; /* Keep the height */
  background-color: red; /* Blue by default, will be overridden */
  grid-column: span 2; /* Span two columns */
  grid-row: 1; /* Place at the first row */
}

.blue1 {
  width: 100%; /* Full width */
  height: 100px; /* Keep the height */
  background-color: blue; /* Blue by default, will be overridden */
  grid-column: span 2; /* Span two columns */
  grid-row: 4; /* Place at the last row */
}

.green1 {
  width: 200px; 
  height: 200px; 
  background-color: green; 
  grid-row: 2 / 3; /* Place in row 2 and span to row 3 */
}

.yellow1 {
  width: 200px; 
  height: 200px; 
  background-color: gold; 
  grid-row: 3 / 4; /* Place in row 3 and span to row 4 */
}
/* Activity 2 styles */ 
.content2 {
  /* This is the parent of the activity 2 boxes. */
  position: relative; 
}

.red2, .green2, .yellow2, .blue2 {
  width: 100px;
  height: 100px;
  position: absolute;
}

.red2 {
  background-color: red;
  top: 0;
  left: 0;
}

.green2 {
  background-color: green;
  top: 50px;
  left: 50px;
}

.yellow2 {
  background-color: gold;
  top: 100px;
  left: 100px;
}

.blue2 {
  background-color: blue;
  top: 150px;
  left: 150px;
} 
/* Activity 3 styles */ 
.content3 {
  display: grid;
  grid-template-columns: auto 100px auto; /* Adjust column widths as needed */
  grid-column-gap: 10px; /* Adjust the gap between columns */
}

.red3 {
  width: 100%;
  height: 100px;
  background-color: red;
  grid-column: 1 / span 3; /* Span across all three columns */
}

.green3 {
  width: 600px;
  height: 200px; /* Twice the height of red and blue */
  background-color: green;
  grid-column: 1; /* Align on the left side */
}

.yellow3 {
  width: 600px;
  height: 200px; /* Twice the height of red and blue */
  background-color: gold;
  grid-column: 3; /* Align on the right side */
  justify-self: end; /* Right justify */
}

.blue3 {
  width: 100%;
  height: 100px;
  background-color: blue;
  grid-column: 1 / span 3; /* Span across all three columns */
}
/* Activity 4 styles */ 
.content4 {
  display: grid;
  grid-template-columns: 1fr 1fr; /* Divide the grid into two equal columns */
  grid-gap: 0; /* No gap between grid items */
}

.red4 {
  width: 100%; /* Full width of the grid cell */
  height: 300px; /* Adjust the height as needed */
  background-color: red;
  grid-column: 1; /* Left justified */
  grid-row: 1 / span 3; /* Span three rows */
}

.green4, .yellow4, .blue4 {
  width: 100%; /* Half of the grid width */
  height: 100px; /* 1/3 of the red element's height */
  background-color: green; /* Green by default, will be overridden */
  grid-column: 2; /* Right justified */
  justify-self: end; /* Right justify */
}

.green4 {
  background-color: green;
  grid-row: 1; /* Top position */
}

.yellow4 {
  background-color: gold;
  grid-row: 2; /* Middle position */
}

.blue4 {
  background-color: blue;
  grid-row: 3; /* Bottom position */
}

/* Activity 5 styles */ 
.content5 {
  width: 400px; /* Adjust as needed */
}

.red5, .blue5 {
  width: 213%; /* Full width */
  height: 80px; /* Increase the height */
  background-color: red; /* Blue by default, will be overridden */
}

.green5 {
  width: 33.33%; /* 1/3 of the parent width */
  height: 150px; /* Make the green element more square */
  background-color: green;
  float: left; /* Float left */
}

.yellow5 {
  width: 213%; /* Full width */
  height: 210px; /* Increase the height */
  background-color: gold;
}

.blue5 {
  background-color: blue;
  clear: both; /* Clear the float */
}

.text5 {
  margin-left: 10px; /* Adjust as needed */
  margin-right: 10px; /* Adjust as needed */
}

/* Activity 6 styles */ 
.content6 {
  display: grid;
  grid-template-columns: repeat(6, 100px); /* Six columns each 100px wide */
  grid-template-rows: repeat(6, 100px); /* Six rows each 100px tall */
  position: relative; /* Establish positioning context for absolute positioning */
}

.red6 {
  width: 400px; /* Four columns wide */
  height: 200px; /* Two rows tall */
  background-color: red;
  grid-column: 1 / span 4; /* Span four columns */
  grid-row: 1 / span 2; /* Span two rows */
  z-index: 2; /* Layer on top */
}

.green6 {
  width: 200px; /* Two columns wide */
  height: 200px; /* Two rows tall */
  background-color: green;
  grid-column: 1 / span 2; /* Span two columns */
  grid-row: 5 / span 2; /* Start at row 5 and span two rows */
  z-index: 3; /* Layer below */
}

.yellow6 {
  width: 200px; /* Two columns wide */
  height: 400px; /* Four rows tall */
  background-color: gold;
  grid-column: 5 / span 2; /* Start at column 5 and span two columns */
  grid-row: 3 / span 4; /* Span four rows */
  z-index: 3; /* Layer on top of green but below red and blue */
}

.blue6 {
  width: 400px; /* Four columns wide */
  height: 400px; /* Four rows tall */
  background-color: blue;
  grid-column: 2 / span 4; /* Start at column 2 and span four columns */
  grid-row: 2 / span 4; /* Start at row 2 and span four rows */
  z-index: 2; /* Layer on top */
} 


/* Do not make any changes below here */
.activity {
  width: 70%; 
  margin: 20px auto; 
  font-family: Arial, sans-serif; 
  border: 1px solid black; 
  padding: 10px; 
  clear:both; 
  overflow: auto;
} 

.hint {
  border: 1px solid grey;
  background: #e0e0e0;
  padding: .5em;
  position: relative;
  margin: 1em 0;
}
.hint h3 {
  margin: 0;
}
.hint:hover {
  background: #d0d0d0;
}
.hint > div {
  display: none;
}

.hint input[type=checkbox] {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
  z-index: 1;
  cursor: pointer;
}

.hint input[type=checkbox]:checked ~ div {
  display: block;
}

.hint i {
  position: absolute;
  transform: translate(-6px, 0);
  margin-top: 16px;
  right: 10px;
  top: -3px;
}
.hint i:before, .hint i:after {
  content: "";
  position: absolute;
  background-color: black;
  width: 3px;
  height: 9px;
}
.hint i:before {
  transform: translate(2px, 0) rotate(45deg);
}
.hint i:after {
  transform: translate(-2px, 0) rotate(-45deg);
}

.hint input[type=checkbox]:checked ~ i:before {
  transform: translate(-2px, 0) rotate(45deg);
}
.hint input[type=checkbox]:checked ~ i:after {
  transform: translate(2px, 0) rotate(-45deg);
}
.hint a {
  position: relative;
  z-index: 1;
}